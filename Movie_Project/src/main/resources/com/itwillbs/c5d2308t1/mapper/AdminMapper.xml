<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.c5d2308t1.mapper.AdminMapper">

<!-- =============== 영화 관리 페이지 ==================== -->
	<!-- 영화 DB 등록 -->
	<insert id="insertMovies">
		INSERT INTO movies
		VALUES(
			#{movie_id}
			, #{movie_title}
			, #{movie_nation}
			, #{movie_prdtYear}
			, #{movie_director}
			, #{movie_actor}
			, #{movie_genre}
			, #{movie_rating}
			, #{movie_plot}
			, #{movie_release_date}
			, #{movie_close_date}
			, #{movie_runtime}
			, #{movie_poster}
			, #{movie_still1}
			, #{movie_still2}
			, #{movie_still3}
			, #{movie_trailer}
			, #{movie_audience}
			, #{movie_status}
		)
	</insert>
	<!-- 영화 DB 수정 -->
	<update id="updateMovies">
		UPDATE movies
		SET
			movie_title = #{movie_title}
			, movie_nation = #{movie_nation}
			, movie_prdtYear = #{movie_prdtYear}
			, movie_director = #{movie_director}
			, movie_actor = #{movie_actor}
			, movie_genre = #{movie_genre}
			, movie_rating = #{movie_rating}
			, movie_plot = #{movie_plot}
			, movie_release_date = #{movie_release_date}
			, movie_close_date = #{movie_close_date}
			, movie_runtime = #{movie_runtime}
			, movie_poster = #{movie_poster}
			, movie_still1 = #{movie_still1}
			, movie_still2 = #{movie_still2}
			, movie_still3 = #{movie_still3}
			, movie_trailer = #{movie_trailer}
			, movie_audience = #{movie_audience}
			, movie_status = #{movie_status}
		WHERE
			movie_id = #{movie_id}
	</update>
	
	<!-- 하나의 영화 정보 조회 -->
	<select id="selectMovie">
		SELECT *
		FROM movies
		WHERE movie_id = #{movie_id}
	</select>

	<!-- 페이징 처리를 위한 게시물 개수 조회 작업 -->
	<select id="selectMovieListCount" resultType="int">
		SELECT COUNT(*)
		FROM movies
		<if test="!searchKeyword.equals('')">
			WHERE
				movie_title LIKE '%${searchKeyword}%'
		</if>
	</select>
	
	<!-- 한 페이지에 표시할 영화 목록 조회 작업 -->
	<select id="selectMovieList" resultType="movies">
		SELECT *
		FROM movies
		<if test="!searchKeyword.equals('')">
			WHERE
				movie_title LIKE '%${searchKeyword}%'
		</if>
		ORDER BY movie_release_date DESC
		LIMIT #{page.startRow}, #{page.listLimit}
	
	</select>
	

<!-- ================ 분실물 관리 페이지 ==================== -->
	<!-- 앨리어스로 com.itwillbs.c5d2308t1.vo.CsVO 등록 -->
	<!-- 	분실문 문의 관리 게시판 조회 작업 -->
<!-- 			조회 레코드 갯수 제한(LIMIT 절 사용) -->
<!-- 			정수 파라미터 2개(startRow, limit) : 시작행 번호부터 지정한 갯수만큼 조회 -->
	<select id="selectLostnfoundList" resultType="hashmap">
		SELECT *
		FROM cs JOIN theaters
		ON cs.theater_id = theaters.theater_id
		WHERE cs_type = '분실물문의'
		ORDER BY cs_id DESC
		LIMIT #{startRow}, #{listLimit}
	</select>
	
<!-- 	분실문 문의 관리 게시판 상세 조회 작업 -->
	<select id="selectLostnfound" resultType="hashmap">
		SELECT *
		FROM cs
		JOIN theaters
		ON cs.theater_id = theaters.theater_id
		WHERE cs_type = '분실물문의'
		AND cs_id = #{cs_id}
	</select>
<!-- 	분실물 문의 관리 게시판 답변 작성 -->
	<update id="updateLnfReply">
		UPDATE cs
		SET cs_reply = #{cs_reply}
		WHERE cs_id = #{cs_id}
	</update>
	
<!-- 	분실물 문의 관리 게시판 답변 삭제 -->
	<update id="updateLnfDlt">
		UPDATE cs
		SET cs_reply = ''
		WHERE cs_id = #{cs_id}
	</update>
	
<!-- 	분실물 페이징 처리를 위한 게시물 개수 조회 -->	
	<select id="selectLostnfoundListCount" resultType="int">
		SELECT COUNT(*)
		FROM cs
		WHERE cs_type = '분실물문의'
	</select>
	
	<!-- ================ 회원 관리 페이지 ==================== -->
	
	<!-- 회원 관리 게시판 회원 수 조회 -->
	<select id="selectMemberListCount" resultType="int">
		SELECT COUNT(*)
		FROM members
		<if test="!searchKeyword.equals('')">
			WHERE
			<choose>
				<when test="searchType.equals('member')">
					member_id LIKE #{searchKeyword}
				</when>
				<when test="searchType.equals('name')">
					member_name LIKE '%${searchKeyword}%'
				</when>
				<otherwise>
					1=1
				</otherwise>
			</choose>
		</if>
	</select>
	<!-- 한 페이지에 표시할 회원 수 조회 -->
	<select id="selectMemberList" resultType="member">
		SELECT *
		FROM members
		<if test="!searchKeyword.equals('')">
			WHERE
			<choose>
				<when test="searchType.equals('member')">
					member_id LIKE #{searchKeyword}
				</when>
				<when test="searchType.equals('name')">
					member_name LIKE '%${searchKeyword}%'
				</when>
			</choose>
		</if>
		ORDER BY member_date DESC
		LIMIT #{page.startRow}, #{page.listLimit}
	</select>
	<!-- 회원 한명의 정보 조회 -->
	<select id="selectMember" resultType="member">
		SELECT *
		FROM members
		WHERE member_id = #{member_id}
	</select>
	<!-- 회원 정보 수정 및 탈퇴 처리 -->
	<update id="updatememberModOrDlt">
	UPDATE members
	SET
		member_name = #{member.member_name}
		<if test="newPasswd != null and !newPasswd.equals('')">
			, member_passwd = #{newPasswd} -- 새 패스워드가 존재할 경우 기존 패스워드 변경
		</if>
		, member_birth = #{member.member_birth}
		, member_phone = #{member.member_phone}
		, member_email = #{member.member_email}
		, member_status = #{member.member_status}
	WHERE
		member_id = #{member.member_id}
	
	</update>
<!-- *************** 1대1문의 관리 게시판 작업 ************* -->
<!-- 	1대1문의 관리 게시판 조회 -->
<!-- 			조회 레코드 갯수 제한(LIMIT 절 사용) -->
<!-- 			정수 파라미터 2개(startRow, limit) : 시작행 번호부터 지정한 갯수만큼 조회 -->
	<select id="selectOneOnOneList" resultType="cs">
		SELECT *
		FROM cs
		WHERE cs_type = '1대1문의'
		ORDER BY cs_id DESC
		LIMIT #{startRow}, #{listLimit}
	</select>
	
<!-- 	1대1문의 페이징 처리를 위한 게시물 개수 조회 -->	
	<select id="selectOneOnOneListCount" resultType="int">
		SELECT COUNT(*)
		FROM cs
		WHERE cs_type= '1대1문의'
	</select>
	
<!-- 	1대1 문의 관리 게시판 상세 조회 -->
	<select id="selectOneOnOne" resultType="hashmap">
		SELECT *
		FROM cs
<!-- 		<if test="1 = 1"> -->
<!-- 			JOIN theaters -->
<!-- 			ON cs.theater_id = theaters.theater_id -->
<!-- 		</if> -->
		WHERE cs_type = '1대1문의'
		AND cs_id = #{cs_id}
	</select>
	
<!--  1대1 문의 답변 등록 -->
	<update id="updateOneOnOneReply">
		UPDATE cs
		SET cs_reply = #{cs_reply}
		WHERE cs_id = #{cs_id}
	</update>	

<!-- *************** 상영스케쥴 관리페이지 작업 ************* -->
<!-- 상영스케쥴 관리 메인 페이지 정보 조회-->
	<select id="selectMainScheduleInfo" resultType="theater">
		SELECT *
		FROM theaters
		WHERE theater_id = 1
	</select>

</mapper>